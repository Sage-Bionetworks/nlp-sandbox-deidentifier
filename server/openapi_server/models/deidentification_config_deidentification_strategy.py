# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.deidentification_config_deidentification_strategy_date_offset_config import DeidentificationConfigDeidentificationStrategyDateOffsetConfig
from openapi_server.models.deidentification_config_deidentification_strategy_masking_char_config import DeidentificationConfigDeidentificationStrategyMaskingCharConfig
from openapi_server import util

from openapi_server.models.deidentification_config_deidentification_strategy_date_offset_config import DeidentificationConfigDeidentificationStrategyDateOffsetConfig  # noqa: E501
from openapi_server.models.deidentification_config_deidentification_strategy_masking_char_config import DeidentificationConfigDeidentificationStrategyMaskingCharConfig  # noqa: E501

class DeidentificationConfigDeidentificationStrategy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, masking_char_config=None, redact_config=None, annotation_type_config=None, date_offset_config=None):  # noqa: E501
        """DeidentificationConfigDeidentificationStrategy - a model defined in OpenAPI

        :param masking_char_config: The masking_char_config of this DeidentificationConfigDeidentificationStrategy.  # noqa: E501
        :type masking_char_config: DeidentificationConfigDeidentificationStrategyMaskingCharConfig
        :param redact_config: The redact_config of this DeidentificationConfigDeidentificationStrategy.  # noqa: E501
        :type redact_config: object
        :param annotation_type_config: The annotation_type_config of this DeidentificationConfigDeidentificationStrategy.  # noqa: E501
        :type annotation_type_config: object
        :param date_offset_config: The date_offset_config of this DeidentificationConfigDeidentificationStrategy.  # noqa: E501
        :type date_offset_config: DeidentificationConfigDeidentificationStrategyDateOffsetConfig
        """
        self.openapi_types = {
            'masking_char_config': DeidentificationConfigDeidentificationStrategyMaskingCharConfig,
            'redact_config': object,
            'annotation_type_config': object,
            'date_offset_config': DeidentificationConfigDeidentificationStrategyDateOffsetConfig
        }

        self.attribute_map = {
            'masking_char_config': 'maskingCharConfig',
            'redact_config': 'redactConfig',
            'annotation_type_config': 'annotationTypeConfig',
            'date_offset_config': 'dateOffsetConfig'
        }

        self._masking_char_config = masking_char_config
        self._redact_config = redact_config
        self._annotation_type_config = annotation_type_config
        self._date_offset_config = date_offset_config

    @classmethod
    def from_dict(cls, dikt) -> 'DeidentificationConfigDeidentificationStrategy':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DeidentificationConfig_deidentificationStrategy of this DeidentificationConfigDeidentificationStrategy.  # noqa: E501
        :rtype: DeidentificationConfigDeidentificationStrategy
        """
        return util.deserialize_model(dikt, cls)

    @property
    def masking_char_config(self):
        """Gets the masking_char_config of this DeidentificationConfigDeidentificationStrategy.


        :return: The masking_char_config of this DeidentificationConfigDeidentificationStrategy.
        :rtype: DeidentificationConfigDeidentificationStrategyMaskingCharConfig
        """
        return self._masking_char_config

    @masking_char_config.setter
    def masking_char_config(self, masking_char_config):
        """Sets the masking_char_config of this DeidentificationConfigDeidentificationStrategy.


        :param masking_char_config: The masking_char_config of this DeidentificationConfigDeidentificationStrategy.
        :type masking_char_config: DeidentificationConfigDeidentificationStrategyMaskingCharConfig
        """

        self._masking_char_config = masking_char_config

    @property
    def redact_config(self):
        """Gets the redact_config of this DeidentificationConfigDeidentificationStrategy.

        Configuration for the redaction strategy. E.g. \"John Smith lives at 123 Main St\" -> \"lives at\".  # noqa: E501

        :return: The redact_config of this DeidentificationConfigDeidentificationStrategy.
        :rtype: object
        """
        return self._redact_config

    @redact_config.setter
    def redact_config(self, redact_config):
        """Sets the redact_config of this DeidentificationConfigDeidentificationStrategy.

        Configuration for the redaction strategy. E.g. \"John Smith lives at 123 Main St\" -> \"lives at\".  # noqa: E501

        :param redact_config: The redact_config of this DeidentificationConfigDeidentificationStrategy.
        :type redact_config: object
        """

        self._redact_config = redact_config

    @property
    def annotation_type_config(self):
        """Gets the annotation_type_config of this DeidentificationConfigDeidentificationStrategy.

        Configuration for the \"annotation type\" strategy. E.g. \"John Smith lives at 123 Main St\" -> \"[PERSON_NAME] lives at [PHYSICAL_ADDRESS]\".  # noqa: E501

        :return: The annotation_type_config of this DeidentificationConfigDeidentificationStrategy.
        :rtype: object
        """
        return self._annotation_type_config

    @annotation_type_config.setter
    def annotation_type_config(self, annotation_type_config):
        """Sets the annotation_type_config of this DeidentificationConfigDeidentificationStrategy.

        Configuration for the \"annotation type\" strategy. E.g. \"John Smith lives at 123 Main St\" -> \"[PERSON_NAME] lives at [PHYSICAL_ADDRESS]\".  # noqa: E501

        :param annotation_type_config: The annotation_type_config of this DeidentificationConfigDeidentificationStrategy.
        :type annotation_type_config: object
        """

        self._annotation_type_config = annotation_type_config

    @property
    def date_offset_config(self):
        """Gets the date_offset_config of this DeidentificationConfigDeidentificationStrategy.


        :return: The date_offset_config of this DeidentificationConfigDeidentificationStrategy.
        :rtype: DeidentificationConfigDeidentificationStrategyDateOffsetConfig
        """
        return self._date_offset_config

    @date_offset_config.setter
    def date_offset_config(self, date_offset_config):
        """Sets the date_offset_config of this DeidentificationConfigDeidentificationStrategy.


        :param date_offset_config: The date_offset_config of this DeidentificationConfigDeidentificationStrategy.
        :type date_offset_config: DeidentificationConfigDeidentificationStrategyDateOffsetConfig
        """

        self._date_offset_config = date_offset_config
